-- 1. Table des rôles
CREATE TABLE roles (
   roleId INT PRIMARY KEY AUTO_INCREMENT,
   role VARCHAR(50) UNIQUE NOT NULL
);

-- 2. Catégories de produits (hiérarchiques)
CREATE TABLE categories (
   categoryId INT PRIMARY KEY AUTO_INCREMENT,
   name VARCHAR(50) UNIQUE NOT NULL,
   parentCategoryId INT,
   FOREIGN KEY (parentCategoryId) REFERENCES categories(categoryId) ON DELETE CASCADE
);

-- 3. Table des produits
CREATE TABLE products (
   productId INT PRIMARY KEY AUTO_INCREMENT,
   product VARCHAR(50) NOT NULL,
   description TEXT,
   price DECIMAL(10,2) NOT NULL CHECK (price > 0),
   img TEXT,
   stock INT DEFAULT 0 CHECK (stock >= 0),
   createdAt DATETIME DEFAULT CURRENT_TIMESTAMP
);

-- 4. Liaison produits/catégories
CREATE TABLE productCategory (
   productId INT,
   categoryId INT,
   PRIMARY KEY (productId, categoryId),
   FOREIGN KEY (productId) REFERENCES products(productId) ON DELETE CASCADE,
   FOREIGN KEY (categoryId) REFERENCES categories(categoryId) ON DELETE CASCADE
);

-- 5. Table des utilisateurs
CREATE TABLE users (
   userId INT PRIMARY KEY AUTO_INCREMENT,
   firstName VARCHAR(50) NOT NULL,
   lastName VARCHAR(50) NOT NULL,
   nickName VARCHAR(50) UNIQUE NOT NULL,
   mail VARCHAR(100) UNIQUE NOT NULL,
   password CHAR(60) NOT NULL,
   verified BOOLEAN DEFAULT FALSE,
   createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
   roleId INT NOT NULL,
   FOREIGN KEY (roleId) REFERENCES roles(roleId)
);

-- 6. Adresses des utilisateurs
CREATE TABLE addresses (
   addressId INT PRIMARY KEY AUTO_INCREMENT,
   userId INT NOT NULL,
   street VARCHAR(100) NOT NULL,
   city VARCHAR(50) NOT NULL,
   zipCode VARCHAR(20) NOT NULL,
   country VARCHAR(50) NOT NULL,
   phone VARCHAR(20) NOT NULL,
   isDefault BOOLEAN DEFAULT FALSE,
   FOREIGN KEY (userId) REFERENCES users(userId) ON DELETE CASCADE
);

-- 7. Panier d'achat
CREATE TABLE carts (
   cartId INT PRIMARY KEY AUTO_INCREMENT,
   userId INT NOT NULL UNIQUE,
   createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
   FOREIGN KEY (userId) REFERENCES users(userId) ON DELETE CASCADE
);

-- 8. Contenu du panier
CREATE TABLE quantityCart (
   cartId INT,
   productId INT,
   quantity INT NOT NULL CHECK (quantity > 0),
   PRIMARY KEY (cartId, productId),
   FOREIGN KEY (cartId) REFERENCES carts(cartId) ON DELETE CASCADE,
   FOREIGN KEY (productId) REFERENCES products(productId) ON DELETE CASCADE
);

-- 9. Commandes
CREATE TABLE purchases (
   purchaseId INT PRIMARY KEY AUTO_INCREMENT,
   userId INT NOT NULL,
   purchaseDate DATETIME DEFAULT CURRENT_TIMESTAMP,
   totalAmount DECIMAL(10,2) NOT NULL CHECK (totalAmount >= 0),
   status VARCHAR(20) DEFAULT 'panier' CHECK (status IN ('panier', 'payé', 'expédié', 'livré', 'annulé')),
   addressId INT NOT NULL,
   paymentMethod VARCHAR(50) NOT NULL,
   FOREIGN KEY (userId) REFERENCES users(userId) ON DELETE CASCADE,
   FOREIGN KEY (addressId) REFERENCES addresses(addressId)
);

-- 10. Détails des commandes
CREATE TABLE purchaseDetails (
   purchaseId INT,
   productId INT,
   quantity INT NOT NULL CHECK (quantity > 0),
   unitPrice DECIMAL(10,2) NOT NULL CHECK (unitPrice >= 0),
   PRIMARY KEY (purchaseId, productId),
   FOREIGN KEY (purchaseId) REFERENCES purchases(purchaseId) ON DELETE CASCADE,
   FOREIGN KEY (productId) REFERENCES products(productId) ON DELETE CASCADE
);

-- 11. Paiements
CREATE TABLE payments (
   paymentId INT PRIMARY KEY AUTO_INCREMENT,
   purchaseId INT NOT NULL,
   amount DECIMAL(10,2) NOT NULL CHECK (amount >= 0),
   paymentDate DATETIME DEFAULT CURRENT_TIMESTAMP,
   paymentStatus VARCHAR(20) NOT NULL CHECK (paymentStatus IN ('réussi', 'échoué', 'en attente')),
   transactionId VARCHAR(100) UNIQUE,
   FOREIGN KEY (purchaseId) REFERENCES purchases(purchaseId) ON DELETE CASCADE
);

-- 12. Commentaires et notes
CREATE TABLE comments (
   commentId INT PRIMARY KEY AUTO_INCREMENT,
   userId INT NOT NULL,
   productId INT NOT NULL,
   content TEXT,
   commentDate DATETIME DEFAULT CURRENT_TIMESTAMP,
   rating INT NOT NULL CHECK (rating BETWEEN 1 AND 5),
   FOREIGN KEY (userId) REFERENCES users(userId) ON DELETE CASCADE,
   FOREIGN KEY (productId) REFERENCES products(productId) ON DELETE CASCADE
);

-- 13. Articles de blog
CREATE TABLE articles (
   articleId INT PRIMARY KEY AUTO_INCREMENT,
   title VARCHAR(100) NOT NULL,
   articleDate DATE NOT NULL,
   content TEXT NOT NULL,
   img VARCHAR(100),
   authorId INT NOT NULL,
   FOREIGN KEY (authorId) REFERENCES users(userId) ON DELETE CASCADE
);

-- 14. Produits liés aux articles
CREATE TABLE productByArticle (
   productId INT,
   articleId INT,
   PRIMARY KEY (productId, articleId),
   FOREIGN KEY (productId) REFERENCES products(productId) ON DELETE CASCADE,
   FOREIGN KEY (articleId) REFERENCES articles(articleId) ON DELETE CASCADE
);

-- Index optimisés
CREATE UNIQUE INDEX idx_users_mail ON users(mail);
CREATE INDEX idx_products_price ON products(price);
CREATE INDEX idx_purchases_date ON purchases(purchaseDate);
